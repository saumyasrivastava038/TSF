#!/usr/bin/env python
# coding: utf-8

# In[1]:


# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns


# In[3]:


# Importing the dataset
dataset = pd.read_csv('Iris.csv')
X = dataset.iloc[:, [0, 1, 2, 3]].values


# In[4]:


dataset.drop('Id', axis= 1, inplace= True)


# In[5]:


dataset.isnull().sum()


# In[6]:


#Feature Scaling
from sklearn import preprocessing
X_scaled= preprocessing.scale(X)


# In[9]:


# Using the elbow method to find the optimal number of clusters
from sklearn.cluster import KMeans
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)
sns.set_style('whitegrid')
plt.figure(figsize= (10, 6))
plt.plot(range(1, 11), wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()


# In[10]:


# Training the K-Means model on the dataset
kmeans = KMeans(n_clusters = 3, init = 'k-means++', random_state = 42)
y_kmeans = kmeans.fit_predict(X)


# In[11]:


# Visualising the clusters
plt.figure(figsize= (10, 6))
plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], 
            s = 60, c = 'orange', label = 'Iris-setosa', cmap = 'rainbow')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], 
            s = 60, c = 'red', label = 'Iris-versicolour', cmap = 'rainbow')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1],
            s = 60, c = 'green', label = 'Iris-virginica', cmap = 'rainbow')


# In[13]:


# Plotting the centroids of the clusters
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 100, c = 'blue', label = 'Centroids')

plt.legend()


# In[14]:


# Visualising the clusters
plt.figure(figsize= (10, 6))
plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], 
            s = 60, c = 'orange', label = 'Iris-setosa', cmap = 'rainbow')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], 
            s = 60, c = 'red', label = 'Iris-versicolour', cmap = 'rainbow')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1],
            s = 60, c = 'green', label = 'Iris-virginica', cmap = 'rainbow')

# Plotting the centroids of the clusters
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 150, c = 'blue', label = 'Centroids')

plt.legend()
